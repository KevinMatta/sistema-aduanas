// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using sistema_aduana.Entities.Entities;

#nullable disable

namespace sistema_aduana.DataAccess.Context
{
    public partial class DbaduanaContext : DbContext
    {
        public DbaduanaContext()
        {
        }

        public DbaduanaContext(DbContextOptions<DbaduanaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbAduanas> tbAduanas { get; set; }
        public virtual DbSet<tbCiudades> tbCiudades { get; set; }
        public virtual DbSet<tbComerciantesIndividuales> tbComerciantesIndividuales { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEmpresas> tbEmpresas { get; set; }
        public virtual DbSet<tbEstados> tbEstados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbOficinas> tbOficinas { get; set; }
        public virtual DbSet<tbPaises> tbPaises { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRoles> tbPantallasPorRoles { get; set; }
        public virtual DbSet<tbPersonasJuridicas> tbPersonasJuridicas { get; set; }
        public virtual DbSet<tbPersonasNaturales> tbPersonasNaturales { get; set; }
        public virtual DbSet<tbProfesiones> tbProfesiones { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbAduanas>(entity =>
            {
                entity.HasKey(e => e.Adua_Id)
                    .HasName("PK__tbAduana__C5223A0C6048FDCF");

                entity.ToTable("tbAduanas", "Adua");

                entity.Property(e => e.Adua_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Adua_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Adua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Adua_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Adua_CreacionNavigation)
                    .WithMany(p => p.tbAduanasAdua_CreacionNavigation)
                    .HasForeignKey(d => d.Adua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbAduanas__Adua___5812160E");

                entity.HasOne(d => d.Adua_ModificaNavigation)
                    .WithMany(p => p.tbAduanasAdua_ModificaNavigation)
                    .HasForeignKey(d => d.Adua_Modifica)
                    .HasConstraintName("FK__tbAduanas__Adua___59063A47");

                entity.HasOne(d => d.Ciud)
                    .WithMany(p => p.tbAduanas)
                    .HasForeignKey(d => d.Ciud_Id)
                    .HasConstraintName("FK__tbAduanas__Ciud___3C34F16F");
            });

            modelBuilder.Entity<tbCiudades>(entity =>
            {
                entity.HasKey(e => e.Ciud_Id)
                    .HasName("PK__tbCiudad__D0453088376DE23E");

                entity.ToTable("tbCiudades", "Gral");

                entity.Property(e => e.Ciud_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ciud_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Ciud_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Ciud_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Ciud_CreacionNavigation)
                    .WithMany(p => p.tbCiudadesCiud_CreacionNavigation)
                    .HasForeignKey(d => d.Ciud_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbCiudade__Ciud___52593CB8");

                entity.HasOne(d => d.Ciud_ModificaNavigation)
                    .WithMany(p => p.tbCiudadesCiud_ModificaNavigation)
                    .HasForeignKey(d => d.Ciud_Modifica)
                    .HasConstraintName("FK__tbCiudade__Ciud___534D60F1");

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbCiudades)
                    .HasForeignKey(d => d.Esta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbCiudade__Esta___4316F928");
            });

            modelBuilder.Entity<tbComerciantesIndividuales>(entity =>
            {
                entity.HasKey(e => e.CoIn_Id)
                    .HasName("PK__tbComerc__4F286E29F1FE14D3");

                entity.ToTable("tbComerciantesIndividuales", "Gral");

                entity.Property(e => e.CoIn_Aldea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_AldeaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_BarrioOcolonia)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_BarrioOcoloniaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_CalleYavenida)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_CalleYavenidaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_DNIRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_Declaracion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_EdificioYnum)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_EdificioYnumRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.CoIn_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.CoIn_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.CoIn_PuntosDeReferencia)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_PuntosDeReferenciaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_RtnRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoIn_RtnSolicitante)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Ciud_RepresentanteLegalNavigation)
                    .WithMany(p => p.tbComerciantesIndividuales)
                    .HasForeignKey(d => d.Ciud_RepresentanteLegal)
                    .HasConstraintName("FK__tbComerci__Ciud___0E6E26BF");

                entity.HasOne(d => d.CoIn_CreacionNavigation)
                    .WithMany(p => p.tbComerciantesIndividualesCoIn_CreacionNavigation)
                    .HasForeignKey(d => d.CoIn_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbComerci__CoIn___10566F31");

                entity.HasOne(d => d.CoIn_ModificaNavigation)
                    .WithMany(p => p.tbComerciantesIndividualesCoIn_ModificaNavigation)
                    .HasForeignKey(d => d.CoIn_Modifica)
                    .HasConstraintName("FK__tbComerci__CoIn___114A936A");

                entity.HasOne(d => d.EsCi_RepresentanteLegalNavigation)
                    .WithMany(p => p.tbComerciantesIndividuales)
                    .HasForeignKey(d => d.EsCi_RepresentanteLegal)
                    .HasConstraintName("FK__tbComerci__EsCi___0D7A0286");

                entity.HasOne(d => d.PeNa)
                    .WithMany(p => p.tbComerciantesIndividuales)
                    .HasForeignKey(d => d.PeNa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbComerci__PeNa___0C85DE4D");

                entity.HasOne(d => d.Prof_RepresentanteLegalNavigation)
                    .WithMany(p => p.tbComerciantesIndividuales)
                    .HasForeignKey(d => d.Prof_RepresentanteLegal)
                    .HasConstraintName("FK__tbComerci__Prof___0F624AF8");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.Empl_Id)
                    .HasName("PK__tbEmplea__2EB12E8650B6554C");

                entity.ToTable("tbEmpleados", "Gral");

                entity.HasIndex(e => e.Empl_DNI, "UQ__tbEmplea__5F1C9620BBB9DF2F")
                    .IsUnique();

                entity.Property(e => e.Empl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Empl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Empl_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Empl_PrimerApellido)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_PrimerNombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_DNI)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.Empl_CreacionNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_CreacionNavigation)
                    .HasForeignKey(d => d.Empl_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbEmplead__Empl___5629CD9C");

                entity.HasOne(d => d.Empl_ModificaNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_ModificaNavigation)
                    .HasForeignKey(d => d.Empl_Modifica)
                    .HasConstraintName("FK__tbEmplead__Empl___571DF1D5");

                entity.HasOne(d => d.Empr)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Empr_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbEmplead__Empr___5DCAEF64");

                entity.HasOne(d => d.EsCi)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.EsCi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbEmplead__EsCi___440B1D61");

                //entity.HasOne(d => d.Usua)
                //    .WithMany(p => p.tbEmpleadosUsua)
                //    .HasForeignKey(d => d.Usua_Id)
                //    .OnDelete(DeleteBehavior.ClientSetNull)
                //    .HasConstraintName("FK__tbEmplead__Usua___44FF419A");
            });

            modelBuilder.Entity<tbEmpresas>(entity =>
            {
                entity.HasKey(e => e.Empr_Id)
                    .HasName("PK__tbEmpres__7D468F0BE0022F4C");

                entity.ToTable("tbEmpresas", "Gral");

                entity.Property(e => e.Empr_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Empr_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Empr_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Empr_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Empr_CreacionNavigation)
                    .WithMany(p => p.tbEmpresasEmpr_CreacionNavigation)
                    .HasForeignKey(d => d.Empr_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbEmpresa__Empr___59FA5E80");

                entity.HasOne(d => d.Empr_ModificaNavigation)
                    .WithMany(p => p.tbEmpresasEmpr_ModificaNavigation)
                    .HasForeignKey(d => d.Empr_Modifica)
                    .HasConstraintName("FK__tbEmpresa__Empr___5AEE82B9");
            });

            modelBuilder.Entity<tbEstados>(entity =>
            {
                entity.HasKey(e => e.Esta_Id)
                    .HasName("PK__tbEstado__D52AE7B8D3B31430");

                entity.ToTable("tbEstados", "Gral");

                entity.Property(e => e.Esta_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Esta_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Esta_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Esta_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Esta_CreacionNavigation)
                    .WithMany(p => p.tbEstadosEsta_CreacionNavigation)
                    .HasForeignKey(d => d.Esta_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbEstados__Esta___5070F446");

                entity.HasOne(d => d.Esta_ModificaNavigation)
                    .WithMany(p => p.tbEstadosEsta_ModificaNavigation)
                    .HasForeignKey(d => d.Esta_Modifica)
                    .HasConstraintName("FK__tbEstados__Esta___5165187F");

                entity.HasOne(d => d.Pais)
                    .WithMany(p => p.tbEstados)
                    .HasForeignKey(d => d.Pais_Id)
                    .HasConstraintName("FK__tbEstados__Pais___5EBF139D");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.EsCi_Id)
                    .HasName("PK__tbEstado__6D7205740C3010AD");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.Property(e => e.EsCi_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EsCi_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.EsCi_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.EsCi_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.EsCi_CreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsCi_CreacionNavigation)
                    .HasForeignKey(d => d.EsCi_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbEstados__EsCi___5441852A");

                entity.HasOne(d => d.EsCi_ModificaNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsCi_ModificaNavigation)
                    .HasForeignKey(d => d.EsCi_Modifica)
                    .HasConstraintName("FK__tbEstados__EsCi___5535A963");
            });

            modelBuilder.Entity<tbOficinas>(entity =>
            {
                entity.HasKey(e => e.Ofic_Id)
                    .HasName("PK__tbOficin__F1DA4A4CB33794D1");

                entity.ToTable("tbOficinas", "Gral");

                entity.Property(e => e.Ofic_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ofic_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Ofic_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Ofic_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Adua)
                    .WithMany(p => p.tbOficinas)
                    .HasForeignKey(d => d.Adua_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbOficina__Adua___05D8E0BE");

                entity.HasOne(d => d.Ofic_CreacionNavigation)
                    .WithMany(p => p.tbOficinasOfic_CreacionNavigation)
                    .HasForeignKey(d => d.Ofic_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbOficina__Ofic___02FC7413");

                entity.HasOne(d => d.Ofic_ModificaNavigation)
                    .WithMany(p => p.tbOficinasOfic_ModificaNavigation)
                    .HasForeignKey(d => d.Ofic_Modifica)
                    .HasConstraintName("FK__tbOficina__Ofic___03F0984C");
            });

            modelBuilder.Entity<tbPaises>(entity =>
            {
                entity.HasKey(e => e.Pais_Id)
                    .HasName("PK__tbPaises__6356B8339E868C67");

                entity.ToTable("tbPaises", "Gral");

                entity.Property(e => e.Pais_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pais_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Pais_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Pais_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pais_CreacionNavigation)
                    .WithMany(p => p.tbPaisesPais_CreacionNavigation)
                    .HasForeignKey(d => d.Pais_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPaises__Pais_C__5BE2A6F2");

                entity.HasOne(d => d.Pais_ModificaNavigation)
                    .WithMany(p => p.tbPaisesPais_ModificaNavigation)
                    .HasForeignKey(d => d.Pais_Modifica)
                    .HasConstraintName("FK__tbPaises__Pais_M__5CD6CB2B");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.Pant_Id)
                    .HasName("PK__tbPantal__CF98C93278621FF8");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.Pant_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Pant_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Pant_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pant_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPant_CreacionNavigation)
                    .HasForeignKey(d => d.Pant_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPantall__Pant___4CA06362");

                entity.HasOne(d => d.Pant_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPant_ModificaNavigation)
                    .HasForeignKey(d => d.Pant_Modifica)
                    .HasConstraintName("FK__tbPantall__Pant___4D94879B");
            });

            modelBuilder.Entity<tbPantallasPorRoles>(entity =>
            {
                entity.HasKey(e => e.PaRo_Id)
                    .HasName("PK__tbPantal__228846579BAE8A44");

                entity.ToTable("tbPantallasPorRoles", "Acce");

                entity.Property(e => e.PaRo_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.PaRo_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.PaRo_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.PaRo_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesPaRo_CreacionNavigation)
                    .HasForeignKey(d => d.PaRo_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPantall__PaRo___4E88ABD4");

                entity.HasOne(d => d.PaRo_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPorRolesPaRo_ModificaNavigation)
                    .HasForeignKey(d => d.PaRo_Modifica)
                    .HasConstraintName("FK__tbPantall__PaRo___4F7CD00D");

                entity.HasOne(d => d.Pant)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Pant_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPantall__Pant___46E78A0C");

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Rol_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPantall__Rol_I__47DBAE45");
            });

            modelBuilder.Entity<tbPersonasJuridicas>(entity =>
            {
                entity.HasKey(e => e.PeJu_Id)
                    .HasName("PK__tbPerson__BC87E27F4AA2CCB2");

                entity.ToTable("tbPersonasJuridicas", "Gral");

                entity.Property(e => e.PeJu_Aldea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_AldeaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_BarrioOcolonia)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_BarrioOcoloniaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_CalleYavenida)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_CalleYavenidaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_DNIRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_EdificioYnum)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_EdificioYnumRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_Escritura)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.PeJu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.PeJu_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.PeJu_PuntosDeReferencia)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_PuntosDeReferenciaRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_RtnRepresentanteLegal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeJu_RtnSolicitante)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Ciud_RepresentanteLegalNavigation)
                    .WithMany(p => p.tbPersonasJuridicas)
                    .HasForeignKey(d => d.Ciud_RepresentanteLegal)
                    .HasConstraintName("FK__tbPersona__Ciud___1CBC4616");

                entity.HasOne(d => d.EsCi_RepresentanteLegalNavigation)
                    .WithMany(p => p.tbPersonasJuridicas)
                    .HasForeignKey(d => d.EsCi_RepresentanteLegal)
                    .HasConstraintName("FK__tbPersona__EsCi___1AD3FDA4");

                entity.HasOne(d => d.PeJu_CreacionNavigation)
                    .WithMany(p => p.tbPersonasJuridicasPeJu_CreacionNavigation)
                    .HasForeignKey(d => d.PeJu_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPersona__PeJu___1DB06A4F");

                entity.HasOne(d => d.PeJu_ModificaNavigation)
                    .WithMany(p => p.tbPersonasJuridicasPeJu_ModificaNavigation)
                    .HasForeignKey(d => d.PeJu_Modifica)
                    .HasConstraintName("FK__tbPersona__PeJu___1EA48E88");

                entity.HasOne(d => d.PeNa)
                    .WithMany(p => p.tbPersonasJuridicas)
                    .HasForeignKey(d => d.PeNa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPersona__PeNa___19DFD96B");

                entity.HasOne(d => d.Prof_RepresentanteLegalNavigation)
                    .WithMany(p => p.tbPersonasJuridicas)
                    .HasForeignKey(d => d.Prof_RepresentanteLegal)
                    .HasConstraintName("FK__tbPersona__Prof___1BC821DD");
            });

            modelBuilder.Entity<tbPersonasNaturales>(entity =>
            {
                entity.HasKey(e => e.PeNa_Id)
                    .HasName("PK__tbPerson__D364BF30F3F6BB60");

                entity.ToTable("tbPersonasNaturales", "Gral");

                entity.Property(e => e.PeNa_Apellido)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_CodigoCorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_CodigoCorreoAlternativa)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_Correo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_CorreoAlternativa)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_DNI)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_DNIurlPdf)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_Direccion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.PeNa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.PeNa_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.PeNa_Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_NumReciboPublico)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_NumReciboPublicoUrlPdf)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_Rtn)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_RtnUrlPdf)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_TelefonoCelular)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeNa_TelefonoFijo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Ciud)
                    .WithMany(p => p.tbPersonasNaturales)
                    .HasForeignKey(d => d.Ciud_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPersona__Ciud___0A9D95DB");

                entity.HasOne(d => d.EsCi)
                    .WithMany(p => p.tbPersonasNaturales)
                    .HasForeignKey(d => d.EsCi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPersona__EsCi___08B54D69");

                entity.HasOne(d => d.Ofic)
                    .WithMany(p => p.tbPersonasNaturales)
                    .HasForeignKey(d => d.Ofic_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPersona__Ofic___09A971A2");

                entity.HasOne(d => d.PeNa_CreacionNavigation)
                    .WithMany(p => p.tbPersonasNaturalesPeNa_CreacionNavigation)
                    .HasForeignKey(d => d.PeNa_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPersona__PeNa___06CD04F7");

                entity.HasOne(d => d.PeNa_ModificaNavigation)
                    .WithMany(p => p.tbPersonasNaturalesPeNa_ModificaNavigation)
                    .HasForeignKey(d => d.PeNa_Modifica)
                    .HasConstraintName("FK__tbPersona__PeNa___07C12930");

                entity.HasOne(d => d.Prof)
                    .WithMany(p => p.tbPersonasNaturales)
                    .HasForeignKey(d => d.Prof_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbPersona__Prof___0B91BA14");
            });

            modelBuilder.Entity<tbProfesiones>(entity =>
            {
                entity.HasKey(e => e.Prof_Id)
                    .HasName("PK__tbProfes__A46610E50FE09D6C");

                entity.ToTable("tbProfesiones", "Gral");

                entity.Property(e => e.Prof_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Prof_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Prof_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Prof_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Prof_CreacionNavigation)
                    .WithMany(p => p.tbProfesionesProf_CreacionNavigation)
                    .HasForeignKey(d => d.Prof_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbProfesi__Prof___01142BA1");

                entity.HasOne(d => d.Prof_ModificaNavigation)
                    .WithMany(p => p.tbProfesionesProf_ModificaNavigation)
                    .HasForeignKey(d => d.Prof_Modifica)
                    .HasConstraintName("FK__tbProfesi__Prof___02084FDA");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Rol_Id)
                    .HasName("PK__tbRoles__795EBD49B534AB9F");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Rol_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rol_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Rol_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Rol_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Rol_CreacionNavigation)
                    .WithMany(p => p.tbRolesRol_CreacionNavigation)
                    .HasForeignKey(d => d.Rol_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbRoles__Rol_Cre__4AB81AF0");

                entity.HasOne(d => d.Rol_ModificaNavigation)
                    .WithMany(p => p.tbRolesRol_ModificaNavigation)
                    .HasForeignKey(d => d.Rol_Modifica)
                    .HasConstraintName("FK__tbRoles__Rol_Mod__4BAC3F29");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.Usua_Id)
                    .HasName("PK__tbUsuari__E863C8EE2F0DB248");

                entity.ToTable("tbUsuarios", "Acce");

                entity.Property(e => e.Usua_Clave).IsRequired();

                entity.Property(e => e.Usua_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Usua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Usua_Usuario)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Rol_Id)
                    .HasConstraintName("FK__tbUsuario__Rol_I__45F365D3");

                entity.HasOne(d => d.Usua_CreacionNavigation)
                    .WithMany(p => p.InverseUsua_CreacionNavigation)
                    .HasForeignKey(d => d.Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tbUsuario__Usua___48CFD27E");

                entity.HasOne(d => d.Usua_ModificaNavigation)
                    .WithMany(p => p.InverseUsua_ModificaNavigation)
                    .HasForeignKey(d => d.Usua_Modifica)
                    .HasConstraintName("FK__tbUsuario__Usua___49C3F6B7");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}